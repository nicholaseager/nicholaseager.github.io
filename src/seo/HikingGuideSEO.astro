---
import { type CollectionEntry } from "astro:content";
import gear from "../data/gear.json";
import BaseSEO from "./BaseSEO.astro";
import Script from "./Script.astro";
import { howToFrom } from "./types/how-to";
import { articleFrom } from "./types/article";
import { creativeWorkFrom } from "./types/creative-work";
import { guideFrom } from "./types/guide";

interface Props {
  guide: CollectionEntry<"guides">["data"];
}

const { guide } = Astro.props;
const currentPageCanonicalURL = new URL(Astro.url.pathname, Astro.site);
const absoluteImageUrl = new URL(
  guide.image + ".jpg",
  "https://ik.imagekit.io/qn1gkawvy/tr:w-1280/"
);

const tools = guide.gear?.trip
  ? gear.filter((g) => g.trips.includes(guide.gear!.trip))
  : [];
---

<BaseSEO
  title={guide.title}
  description={guide.introduction}
  imageURL={absoluteImageUrl}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
/>

<Script
  graph={[
    howToFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      totalTime: guide.itinerary?.duration,
      steps: guide.itinerary?.phases.map((phase) => ({
        title: phase.title,
        description: phase.description,
        image: phase.images?.[0],
      })),
      tools: tools,
    }),
    articleFrom({
      name: guide.title,
      headline: guide.title,
      abstract: guide.introduction,
      description: guide.introduction,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      image: guide.image,
      keywords: guide.tags.map((tag) =>
        tag
          .split("-")
          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
          .join(" ")
      ),
    }),
    creativeWorkFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      audience: {
        type: "Intermediate Hikers",
      },
      educationalLevel: "Intermediate",
      location: guide.location && {
        name: guide.location.name,
        latitude: guide.location.latitude,
        longitude: guide.location.longitude,
        mapId: guide.map?.id,
      },
    }),
    guideFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      description: guide.introduction,
      image: guide.image,
      location: guide.location && {
        name: guide.location.name,
        latitude: guide.location.latitude,
        longitude: guide.location.longitude,
        mapId: guide.map?.id,
      },
      targetAudience: "Intermediate Hikers",
    }),
  ]}
/>

---
import { type CollectionEntry } from "astro:content";
import gear from "../data/gear.json";
import HowTo from "./types/HowTo.astro";
import Article from "./types/Article.astro";
import CreativeWork from "./types/CreativeWork.astro";
import Guide from "./types/Guide.astro";
import BaseSEO from "./BaseSEO.astro";

interface Props {
  guide: CollectionEntry<"guides">["data"];
}

const { guide } = Astro.props;
const currentPageCanonicalURL = new URL(Astro.url.pathname, Astro.site);
const absoluteImageUrl = new URL(
  guide.image + ".jpg",
  "https://ik.imagekit.io/qn1gkawvy/tr:w-1280/"
);
const authorName = "Nicholas Eager";
const authorURL = new URL("/about", Astro.site);

const tools = guide.gear?.trip
  ? gear.filter((g) => g.trips.includes(guide.gear!.trip))
  : [];
---

<BaseSEO
  title={guide.title}
  description={guide.introduction}
  imageURL={absoluteImageUrl}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
/>

<HowTo
  name={guide.title}
  url={currentPageCanonicalURL.toString()}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
  totalTime={guide.itinerary?.duration}
  steps={guide.itinerary?.phases.map((phase) => ({
    title: phase.title,
    description: phase.description,
    image: phase.images?.[0],
  }))}
  tools={tools}
/>

<Article
  name={guide.title}
  headline={guide.title}
  abstract={guide.introduction}
  description={guide.introduction}
  url={currentPageCanonicalURL.toString()}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
  author={{
    name: authorName,
    url: authorURL,
  }}
  ,
  image={{
    url: guide.image,
    caption: `Main image for ${guide.title}`,
  }}
  keywords={guide.tags.map((tag) =>
    tag
      .split("-")
      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
      .join(" ")
  )}
/>

<CreativeWork
  name={guide.title}
  url={currentPageCanonicalURL.toString()}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
  author={{
    name: authorName,
    url: authorURL,
  }}
  audience={{
    type: "Intermediate Hikers",
  }}
  educationalLevel="Intermediate"
  location={guide.location && {
    name: guide.location.name,
    latitude: guide.location.latitude,
    longitude: guide.location.longitude,
    mapId: guide.map?.id,
  }}
/>

<Guide
  name={guide.title}
  url={currentPageCanonicalURL.toString()}
  datePublished={guide.date.toISOString()}
  dateModified={guide.modified_date.toISOString()}
  description={guide.introduction}
  author={{
    name: authorName,
    url: authorURL,
  }}
  image={{
    url: guide.image,
    caption: `Main image for ${guide.title}`,
  }}
  location={guide.location && {
    name: guide.location.name,
    latitude: guide.location.latitude,
    longitude: guide.location.longitude,
    mapId: guide.map?.id,
  }}
  targetAudience="Intermediate Hikers"
/>

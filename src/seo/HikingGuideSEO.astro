---
import { type CollectionEntry } from "astro:content";
import gear from "../data/gear.json";
import Script from "./Script.astro";
import { howToFrom } from "./types/how-to";
import { articleFrom } from "./types/article";
import { creativeWorkFrom } from "./types/creative-work";
import { guideFrom } from "./types/guide";
import { kebabToTitleCase } from "../utils/kebab";

interface Props {
  guide: CollectionEntry<"guides">["data"];
}

const { guide } = Astro.props;
const currentPageCanonicalURL = new URL(Astro.url.pathname, Astro.site);

// Find the itinerary section
const itinerarySection = guide.sections.find(
  (section) => section.content?.type === "itinerary"
);
const itineraryContent =
  itinerarySection?.content?.type === "itinerary"
    ? itinerarySection.content
    : undefined;

// Find the gear section
const gearSection = guide.sections.find(
  (section) => section.content?.type === "gear"
);
const gearContent =
  gearSection?.content?.type === "gear" ? gearSection.content : undefined;

// Find the map section
const mapSection = guide.sections.find(
  (section) => section.content?.type === "google-map"
);
const mapContent =
  mapSection?.content?.type === "google-map" ? mapSection.content : undefined;

const tools = gearContent?.trip
  ? gear.filter((g) => g.trips.includes(gearContent.trip))
  : [];
---

<Script
  graph={[
    howToFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      totalTime: itineraryContent?.duration,
      steps: itineraryContent?.phases.map((phase) => ({
        title: phase.title,
        description: phase.description,
        image: phase.images?.[0],
      })),
      tools: tools,
    }),
    articleFrom({
      name: guide.title,
      headline: guide.title,
      abstract: guide.introduction,
      description: guide.introduction,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      image: guide.image,
      keywords: guide.tags.map((tag) => kebabToTitleCase(tag)),
    }),
    creativeWorkFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      audience: {
        type: "Intermediate Hikers",
      },
      educationalLevel: "Intermediate",
      location: guide.location && {
        name: guide.location.name,
        latitude: guide.location.latitude,
        longitude: guide.location.longitude,
        mapId: mapContent?.mapId,
      },
    }),
    guideFrom({
      name: guide.title,
      url: currentPageCanonicalURL,
      datePublished: guide.date.toISOString(),
      dateModified: guide.modified_date.toISOString(),
      description: guide.introduction,
      image: guide.image,
      location: guide.location && {
        name: guide.location.name,
        latitude: guide.location.latitude,
        longitude: guide.location.longitude,
        mapId: mapContent?.mapId,
      },
      targetAudience: "Intermediate Hikers",
    }),
  ]}
/>

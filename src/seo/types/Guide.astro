---
interface Props {
  name: string;
  url: string;
  datePublished: string;
  dateModified: string;
  description?: string;
  author: {
    name: string;
    url: string | URL;
  };
  image?: {
    url: string;
    caption: string;
  };
  location?: {
    name: string;
    latitude?: string;
    longitude?: string;
    mapId?: string;
  };
  targetAudience?: string;
}

const {
  name,
  url,
  datePublished,
  dateModified,
  description,
  author,
  image,
  location,
  targetAudience,
} = Astro.props;

const jsonLd = {
  "@id": `${url}#guide`,
  "@context": "https://schema.org",
  "@type": "Guide",
  isPartOf: {
    "@id": `${url}#webpage`,
  },
  name,
  url,
  datePublished,
  dateModified,
  ...(description && { description }),
  author: {
    "@type": "Person",
    name: author.name,
    url: author.url,
  },
  ...(image && {
    image: {
      "@type": "ImageObject",
      url: new URL(
        image.url + ".jpg",
        "https://ik.imagekit.io/qn1gkawvy/tr:w-1280/"
      ).toString(),
      height: "1280",
      width: "1280",
      caption: image.caption,
    },
  }),
  ...(location && {
    contentLocation: {
      "@type": "Place",
      name: location.name,
      ...(location.latitude &&
        location.longitude && {
          geo: {
            "@type": "GeoCoordinates",
            latitude: location.latitude,
            longitude: location.longitude,
          },
        }),
      ...(location.mapId && {
        map: `https://www.google.com/maps/d/viewer?mid=${location.mapId}`,
      }),
    },
  }),
  ...(targetAudience && {
    audience: {
      "@type": "Audience",
      audienceType: targetAudience,
    },
  }),
};
---

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(jsonLd)}
/>

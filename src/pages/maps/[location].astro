---
import ResponsiveWidth from "../../components/layout/ResponsiveWidth.astro";
import Link from "../../components/ui/Link";
import LinkButton from "../../components/ui/LinkButton";
import Page from "../../layouts/Page.astro";
import { kebabToTitleCase } from "../../utils/kebab";

interface HikingMapData {
  slug: string;
  name: string;
}

interface LocationMap {
  [key: string]: HikingMapData[];
}

export async function getStaticPaths() {
  const files = import.meta.glob<HikingMapData>("/src/data/maps/**/*.json", {
    eager: true,
  });
  const locations = new Set<string>();

  // Get all unique locations
  Object.keys(files).forEach((file) => {
    const location = file.split("/")[4];
    locations.add(location);
  });

  // Create a map of locations to their hikes
  const locationMap: LocationMap = {};
  Object.entries(files).forEach(([path, content]) => {
    const location = path.split("/")[4];
    const slug = path.split("/")[5].replace(".json", "");

    if (!locationMap[location]) {
      locationMap[location] = [];
    }

    locationMap[location].push({
      ...content,
      slug,
    });
  });

  // Return paths for each location
  return Array.from(locations).map((location) => ({
    params: { location },
    props: { hikes: locationMap[location] },
  }));
}

const { location } = Astro.params;
const { hikes } = Astro.props as { hikes: HikingMapData[] };
const title = `Hikes in ${kebabToTitleCase(location)}`;
---

<Page title={title}>
  <ResponsiveWidth>
    <div class="space-y-8">
      <Link href="/maps">‚Üê Back to All Locations</Link>
      <ul class="space-y-4">
        {
          hikes.map((hike) => (
            <li>
              <LinkButton
                variant="secondary"
                href={`/maps/${location}/${hike.slug}`}
              >
                {hike.name}
              </LinkButton>
            </li>
          ))
        }
      </ul>
    </div>
  </ResponsiveWidth>
</Page>

---
import { getCollection, getEntries } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Page from "../../../../layouts/Page.astro";
import GallerySEO from "../../../../seo/GallerySEO.astro";
import Text from "../../../../components/ui/Text";
import ResponsiveWidth from "../../../../components/layout/ResponsiveWidth.astro";
import Image from "../../../../components/image-kit/Image";
import Card from "../../../../components/ui/Card";
import { getEntry } from "astro:content";

interface Props {
  title: string;
  description: string;
  photos: CollectionEntry<"photos">["data"][];
  previewPhoto: CollectionEntry<"photos">["data"];
}

export async function getStaticPaths() {
  const photoLocations = await getCollection("photoLocations");

  // Filter to only get country locations (those without country/region format in id)
  const countries = photoLocations
    .filter((l) => !l.data.id.includes("/"))
    .map((l) => l.data);

  // Transform countries into Astro path params
  return await Promise.all(
    countries.map(async (country) => {
      const id = country.id;
      return {
        params: { country: id },
        props: {
          ...country,
          photos: (await getEntries(country.photos)).map((p) => p.data),
          previewPhoto: (await getEntry(country.previewPhoto)).data,
        },
      };
    })
  );
}

const { title, description, photos, previewPhoto }: Props = Astro.props;
---

<Page title={title} description={description}>
  <ResponsiveWidth size="lg">
    <div class="space-y-8">
      {
        photos.map((photo) => (
          <>
            <div class="flex flex-row items-center justify-center w-full">
              <Card>
                <a href={`/${photo.slug}`}>
                  <Image path={photo.slug} />
                </a>
              </Card>
            </div>
            <Text variant="body">{photo.description}</Text>
            <hr />
          </>
        ))
      }
    </div>
  </ResponsiveWidth>
  <GallerySEO
    title={title}
    description={description}
    images={photos.map((p) => p.slug)}
    image={previewPhoto.slug}
  />
</Page>

---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import Banner from "../components/Banner.astro";
import Text from "../components/ui/Text.tsx";
import LinkButton from "../components/ui/LinkButton.tsx";
import Intro from "../components/guide/Intro.astro";
import Itinerary from "../components/guide/Itinerary.tsx";
import PageContainer from "../components/containers/PageContainer.astro";
import TextContainer from "../components/containers/TextContainer.astro";
import ImagesSwiper from "../components/guide/ThumbsSwiper.tsx";
import MediaContainer from "../components/containers/MediaContainer.astro";
import GoogleMap from "../components/GoogleMap.astro";
import GearSwiper from "../components/gear/GearSwiper.tsx";
import CommentForm from "../components/form/CommentForm.astro";
import { getSimilarGuides } from "../utils/similarity";
import GuideSwiper from "../components/guide/GuideSwiper";

type Props = CollectionEntry<"guides">["data"];

const {
  title,
  youtube,
  introduction,
  conclusion,
  image,
  modified_date,
  overview,
  weather,
  basics,
  map,
  itinerary,
  highlights,
  gear,
  tags,
} = Astro.props;

const guides = await getCollection("guides");
const guidesWithSimilarity = getSimilarGuides(guides, tags);
---

<Layout navStyle="transparent">
  <Banner title={title} type="image" media={image} />
  <div class="my-8">
    <Intro
      title={title}
      lastUpdated={modified_date}
      description={introduction}
      videoId={youtube ?? ""}
    />
  </div>

  <PageContainer>
    <!-- Overview -->
    {
      overview && (
        <>
          <TextContainer>
            <Text variant="h2">Overview</Text>
          </TextContainer>
          <MediaContainer>
            <ImagesSwiper client:visible imagePaths={overview.images ?? []} />
          </MediaContainer>
          <TextContainer>
            <Text variant="body">{overview.summary}</Text>
          </TextContainer>
        </>
      )
    }

    <!-- Basics -->
    {
      basics && (
        <>
          <TextContainer>
            <Text variant="h2">Basic Information</Text>
          </TextContainer>
          {basics.items.map((item) => (
            <TextContainer>
              <Text variant="body">
                <b>{item.title}: </b>
                {item.description}
              </Text>
            </TextContainer>
          ))}
        </>
      )
    }

    <!-- Weather -->
    {
      weather && (
        <>
          <TextContainer>
            <Text variant="h2">Weather</Text>
            {weather.introduction && <Text variant="body">{weather.introduction}</Text>}
          </TextContainer>
          {weather.seasons?.map((item) => (
            <TextContainer>
              <Text variant="body">
                <b>{item.title}: </b>
                {item.description}
              </Text>
            </TextContainer>
          ))}
        </>
      )
    }

    <!-- Map -->
    {
      map && (
        <>
          <TextContainer>
            <Text variant="h2">Map</Text>
            {map.introduction && <Text variant="body">{map.introduction}</Text>}
          </TextContainer>
          <MediaContainer>
            <GoogleMap mapId={map.id} />
          </MediaContainer>
        </>
      )
    }

    <!-- Itinerary -->
    {
      itinerary && (
        <>
          <TextContainer>
            <Text variant="h2">Itinerary</Text>
            {itinerary.introduction && <Text variant="body">{itinerary.introduction}</Text>}
          </TextContainer>
          <MediaContainer>
            <Itinerary client:visible itinerary={itinerary.phases} />
          </MediaContainer>
        </>
      )
    }

    <!-- Highlights -->
    {
      highlights && (
        <>
          <TextContainer>
            <Text variant="h2">Highlights</Text>
            {highlights.introduction && <Text variant="body">{highlights.introduction}</Text>}
          </TextContainer>
          {highlights.items.map((item) => (
            <TextContainer>
              <Text variant="h3">{item.title}</Text>
            </TextContainer>
            <MediaContainer>
              {item.images && (
                <ImagesSwiper client:visible imagePaths={item.images} />
              )}
            </MediaContainer>
            <TextContainer>
              <Text variant="body">{item.description}</Text>
            </TextContainer>
          ))}
        </>
      )
    }

    <!-- Gear -->
    {
      gear && (
        <>
          <TextContainer>
            <Text variant="h2">Gear</Text>
            {gear.introduction && <Text variant="body">{gear.introduction}</Text>}
          </TextContainer>
          <MediaContainer>
            <GearSwiper client:visible trip={gear.trip} />
          </MediaContainer>
          <TextContainer>
            <Text variant="body">The provided gear list is a suggestion, tailor it to your needs. Prioritize safety by packing and preparing well for a happy, adventurous hike. Interested in all of my gear recommendations? Click the button below to see what I recommend for filming, travel, and fun :)</Text>
            <div class="mt-4"><LinkButton href="/gear">Explore All Gear</LinkButton></div>
          </TextContainer>
        </>
      )
    }

    <!-- Conclusion -->
    {
      conclusion && (
        <>
          <TextContainer>
            <Text variant="h2">Conclusion</Text>
            <Text variant="body">{conclusion}</Text>
          </TextContainer>
        </>
      )
    }

    <!-- Similar Guides -->
    <div>
      <TextContainer>
        <Text variant="h3">You Might Also Like</Text>
      </TextContainer>
      <MediaContainer>
        <GuideSwiper client:visible guides={guidesWithSimilarity} />
      </MediaContainer>
    </div>

    <!-- Comment -->
    <TextContainer>
      <Text variant="body">My site does not support public comments. Please use the form below to send a comment directly to me if you want to ask questions; I am happy to help.</Text>
    </TextContainer>
    <MediaContainer>
      <CommentForm/>
    </MediaContainer>

    <!-- Disclosure -->
    <TextContainer>
      <div class="space-y-4">
        <Text variant="custom" className="text-sm italic">
          <span class="underline font-bold">
            Safety Disclosure:
          </span>
          <span>
            This travel guide is intended for educational purposes only. Readers are urged to conduct their due diligence,
            verify current conditions, and research the most recent information independently. Conditions along trails and relevant
            details may change, necessitating the confirmation of accurate and updated information from reliable sources or local
            authorities before undertaking any travel or outdoor activities.
          </span>
        </Text>
        <Text variant="custom" className="text-sm italic">
          <span class="underline font-bold">
            Affiliate Disclosure: 
          </span>
          <span>  
            This travel guide contains affiliate links, which means I may earn a commission for purchases made through these
            links at no cost to you. Your support helps sustain the creation of more content.
          </span>
        </Text>
      </div>
    </TextContainer>
  </PageContainer>
</Layout>
